# -*- coding: utf-8 -*-
# This program receives input in the form of hexadecimal colour values, converts it to RGB and then based on a tagged 
# data set and utilizing the knn clustering algorithm decides what colour name the 3-tuple belongs to.
import numpy as np

def hex_2_rgb(hex):
    return tuple(ord(c) for c in hex[1:].decode('hex'))
    
colors = {(0,0,0):u'سیاه',(5,5,5):u'سیاه',(10,10,10):u'سیاه',(3,3,3):u'سیاه',(15,15,15):u'سیاه',\
          (77,77,77):u'خاکستری',(85,85,85):u'خاکستری',(77,77,77):u'خاکستری',(119,119,119):u'خاکستری',(145,145,145):u'خاکستری',\
          (255,255,255):u'سفید',(252,252,252):u'سفید',(245,245,245):u'سفید',(247,247,247):u'سفید',(250,250,250):u'سفید',
          (0,0,205):u'آبی', (0,0,128):u'آبی',(135,206,250):u'آبی',(16,78,139):u'آبی',(0,34,102):u'آبی',(0,104,139):u'آبی',\
          (100,149,237):u'آبی', (67,110,238):u'آبی', (69,139,116):u'سبز', (0,100,0):u'سبز',(47,79,47):u'سبز',(85,107,47):u'سبز',\
          (34,139,34):u'سبز',(50,205,50):u'سبز',(107,142,35):u'سبز',(105,139,34):u'سبز',(0,139,69):u'سبز',(69,139,0):u'سبز',\
          (0,128,0):u'سبز',(0,255,0):u'سبز',(0,139,0):u'سبز',(35,142,35):u'سبز',(9,249,17):u'سبز',(46,139,87):u'سبز',(107,142,35):u'سبز',\
          (92,64,51):u'قهوه ای',(139,69,19):u'قهوه ای',(139,90,43):u'قهوه ای',(107,66,38):u'قهوه ای',(133,94,66):u'قهوه ای',\
          (92,51,23):u'قهوه ای',(255,140,0):u'نارنجی',(255,127,0):u'نارنجی',(238,118,0):u'نارنجی',(205,102,0):u'نارنجی',\
          (238,154,0):u'نارنجی',(205,133,0):u'نارنجی',(255,69,0):u'نارنجی', (255,0,255):u'صورتی',(238,0,238):u'صورتی',\
          (255,52,179):u'صورتی',(238,48,167):u'صورتی',(205,41,144):u'صورتی',(255,131,250):u'صورتی',(238,221,130):u'زرد',\
          (255,236,139):u'زرد',(255,255,0):u'زرد',(238,238,0):u'زرد',(205,205,0):u'زرد',(255,215,0):u'زرد',(238,201,0):u'زرد',\
          (205,173,0):u'زرد',(238,64,0):u'قرمز',(205,55,0):u'قرمز',(139,37,0):u'قرمز',(178,34,34):u'قرمز',(255,48,48):u'قرمز',\
          (238,44,44):u'قرمز',(205,38,38):u'قرمز',(139,26,26):u'قرمز',(255,0,0):u'قرمز',(238,0,0):u'قرمز',(140,23,23):u'قرمز',(139,0,0):u'قرمز'}
# We use euclidean distance as a measure of distance between points  
def knn(p, K = 1):
    """ finds K = 1 nearest neighbour of the query point p on the 3D colour plane """
    # euclidean distances from all the other points is computed and the smallest is chosen as the nearest neighbour 
    dist = {}
    for c in colors:
        dist[c] = np.linalg.norm(np.asarray(p)-np.asarray(c))
    return colors[min(dist, key=lambda k: dist[k])]

def main():
    # example hex value
    h = '#00FF00'
    rgb = hex_2_rgb(h)
    print knn(rgb)
    
if __name__ == "__main__":
    main()
